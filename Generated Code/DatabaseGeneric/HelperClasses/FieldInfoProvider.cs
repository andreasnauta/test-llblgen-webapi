//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.3.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace EntityModel.HelperClasses
{
	
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	
	/// <summary>Singleton implementation of the FieldInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	/// <remarks>It uses a single instance of an internal class. The access isn't marked with locks as the FieldInfoProviderBase class is threadsafe.</remarks>
	internal static class FieldInfoProviderSingleton
	{
		#region Class Member Declarations
		private static readonly IFieldInfoProvider _providerInstance = new FieldInfoProviderCore();
		#endregion

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static FieldInfoProviderSingleton()
		{
		}

		/// <summary>Gets the singleton instance of the FieldInfoProviderCore</summary>
		/// <returns>Instance of the FieldInfoProvider.</returns>
		public static IFieldInfoProvider GetInstance()
		{
			return _providerInstance;
		}
	}

	/// <summary>Actual implementation of the FieldInfoProvider. Used by singleton wrapper.</summary>
	internal class FieldInfoProviderCore : FieldInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="FieldInfoProviderCore"/> class.</summary>
		internal FieldInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores.</summary>
		private void Init()
		{
			this.InitClass();
			InitPersonEntityInfos();
			InitActorEntityInfos();
			InitActorIncidentEntityInfos();
			InitCollectionEntityInfos();
			InitIncidentEntityInfos();
			InitItemEntityInfos();
			InitDomainItemEntityInfos();
			InitSpecificItemEntityInfos();

			this.ConstructElementFieldStructures(InheritanceInfoProviderSingleton.GetInstance());
		}

		/// <summary>Inits PersonEntity's FieldInfo objects</summary>
		private void InitPersonEntityInfos()
		{
			this.AddFieldIndexEnumForElementName(typeof(PersonFieldIndex), "PersonEntity");
			this.AddElementFieldInfo("PersonEntity", "Id", typeof(System.Int32), true, false, false, false,  (int)PersonFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("PersonEntity", "Firstname", typeof(System.String), false, false, false, false,  (int)PersonFieldIndex.Firstname, 2147483647, 0, 0);
			this.AddElementFieldInfo("PersonEntity", "Lastname", typeof(System.String), false, false, false, false,  (int)PersonFieldIndex.Lastname, 2147483647, 0, 0);
		}
		/// <summary>Inits ActorEntity's FieldInfo objects</summary>
		private void InitActorEntityInfos()
		{
			this.AddFieldIndexEnumForElementName(typeof(ActorFieldIndex), "ActorEntity");
			this.AddElementFieldInfo("ActorEntity", "CollectionId", typeof(System.Int32), false, true, false, false,  (int)ActorFieldIndex.CollectionId, 0, 0, 10);
			this.AddElementFieldInfo("ActorEntity", "Id", typeof(System.Int32), true, false, false, false,  (int)ActorFieldIndex.Id, 0, 0, 10);
		}
		/// <summary>Inits ActorIncidentEntity's FieldInfo objects</summary>
		private void InitActorIncidentEntityInfos()
		{
			this.AddFieldIndexEnumForElementName(typeof(ActorIncidentFieldIndex), "ActorIncidentEntity");
			this.AddElementFieldInfo("ActorIncidentEntity", "ActorId", typeof(System.Int32), false, true, false, false,  (int)ActorIncidentFieldIndex.ActorId, 0, 0, 10);
			this.AddElementFieldInfo("ActorIncidentEntity", "Id", typeof(System.Int32), true, false, false, false,  (int)ActorIncidentFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("ActorIncidentEntity", "IncidentId", typeof(System.Int32), false, true, false, false,  (int)ActorIncidentFieldIndex.IncidentId, 0, 0, 10);
		}
		/// <summary>Inits CollectionEntity's FieldInfo objects</summary>
		private void InitCollectionEntityInfos()
		{
			this.AddFieldIndexEnumForElementName(typeof(CollectionFieldIndex), "CollectionEntity");
			this.AddElementFieldInfo("CollectionEntity", "Id", typeof(System.Int32), true, false, false, false,  (int)CollectionFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("CollectionEntity", "Name", typeof(System.String), false, false, false, false,  (int)CollectionFieldIndex.Name, 2147483647, 0, 0);
		}
		/// <summary>Inits IncidentEntity's FieldInfo objects</summary>
		private void InitIncidentEntityInfos()
		{
			this.AddFieldIndexEnumForElementName(typeof(IncidentFieldIndex), "IncidentEntity");
			this.AddElementFieldInfo("IncidentEntity", "CollectionId", typeof(System.Int32), false, true, false, false,  (int)IncidentFieldIndex.CollectionId, 0, 0, 10);
			this.AddElementFieldInfo("IncidentEntity", "Grouping", typeof(Nullable<System.Int32>), false, false, false, true,  (int)IncidentFieldIndex.Grouping, 0, 0, 10);
			this.AddElementFieldInfo("IncidentEntity", "Id", typeof(System.Int32), true, false, false, false,  (int)IncidentFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("IncidentEntity", "ItemId", typeof(System.Int32), false, true, false, false,  (int)IncidentFieldIndex.ItemId, 0, 0, 10);
		}
		/// <summary>Inits ItemEntity's FieldInfo objects</summary>
		private void InitItemEntityInfos()
		{
			this.AddFieldIndexEnumForElementName(typeof(ItemFieldIndex), "ItemEntity");
			this.AddElementFieldInfo("ItemEntity", "CollectionId", typeof(System.Int32), false, true, false, false,  (int)ItemFieldIndex.CollectionId, 0, 0, 10);
			this.AddElementFieldInfo("ItemEntity", "Description", typeof(System.String), false, false, false, true,  (int)ItemFieldIndex.Description, 2147483647, 0, 0);
			this.AddElementFieldInfo("ItemEntity", "Id", typeof(System.Int32), true, false, false, false,  (int)ItemFieldIndex.Id, 0, 0, 10);
		}
		/// <summary>Inits DomainItemEntity's FieldInfo objects</summary>
		private void InitDomainItemEntityInfos()
		{
			this.AddFieldIndexEnumForElementName(typeof(DomainItemFieldIndex), "DomainItemEntity");
			this.AddElementFieldInfo("DomainItemEntity", "Id", typeof(System.Int32), true, false, false, false,  (int)DomainItemFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("DomainItemEntity", "OldItemId", typeof(System.Int32), false, false, false, false,  (int)DomainItemFieldIndex.OldItemId, 0, 0, 10);
		}
		/// <summary>Inits SpecificItemEntity's FieldInfo objects</summary>
		private void InitSpecificItemEntityInfos()
		{
			this.AddFieldIndexEnumForElementName(typeof(SpecificItemFieldIndex), "SpecificItemEntity");
			this.AddElementFieldInfo("SpecificItemEntity", "Id", typeof(System.Int32), true, false, false, false,  (int)SpecificItemFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("SpecificItemEntity", "Note", typeof(System.String), false, false, false, false,  (int)SpecificItemFieldIndex.Note, 2147483647, 0, 0);
		}
		
	}
}




