//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.3.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Collections;
using System.Data;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace EntityModel.DatabaseSpecific
{
	/// <summary>Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	/// <remarks>It uses a single instance of an internal class. The access isn't marked with locks as the PersistenceInfoProviderBase class is threadsafe.</remarks>
	internal static class PersistenceInfoProviderSingleton
	{
		#region Class Member Declarations
		private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();
		#endregion

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static PersistenceInfoProviderSingleton()
		{
		}

		/// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
		/// <returns>Instance of the PersistenceInfoProvider.</returns>
		public static IPersistenceInfoProvider GetInstance()
		{
			return _providerInstance;
		}
	}

	/// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
	internal class PersistenceInfoProviderCore : PersistenceInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
		internal PersistenceInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
		private void Init()
		{
			this.InitClass();
			InitPersonEntityMappings();
			InitActorEntityMappings();
			InitActorIncidentEntityMappings();
			InitCollectionEntityMappings();
			InitIncidentEntityMappings();
			InitItemEntityMappings();
			InitDomainItemEntityMappings();
			InitSpecificItemEntityMappings();
		}

		/// <summary>Inits PersonEntity's mappings</summary>
		private void InitPersonEntityMappings()
		{
			this.AddElementMapping("PersonEntity", @"SimpleModel", @"Actor", "Person", 3, 0);
			this.AddElementFieldMapping("PersonEntity", "Id", "Id", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("PersonEntity", "Firstname", "Firstname", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("PersonEntity", "Lastname", "Lastname", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 2);
		}

		/// <summary>Inits ActorEntity's mappings</summary>
		private void InitActorEntityMappings()
		{
			this.AddElementMapping("ActorEntity", @"SimpleModel", @"Core", "Actor", 2, 0);
			this.AddElementFieldMapping("ActorEntity", "CollectionId", "CollectionId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ActorEntity", "Id", "Id", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits ActorIncidentEntity's mappings</summary>
		private void InitActorIncidentEntityMappings()
		{
			this.AddElementMapping("ActorIncidentEntity", @"SimpleModel", @"Core", "ActorIncident", 3, 0);
			this.AddElementFieldMapping("ActorIncidentEntity", "ActorId", "ActorId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ActorIncidentEntity", "Id", "Id", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("ActorIncidentEntity", "IncidentId", "IncidentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
		}

		/// <summary>Inits CollectionEntity's mappings</summary>
		private void InitCollectionEntityMappings()
		{
			this.AddElementMapping("CollectionEntity", @"SimpleModel", @"Core", "Collection", 2, 0);
			this.AddElementFieldMapping("CollectionEntity", "Id", "Id", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("CollectionEntity", "Name", "Name", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits IncidentEntity's mappings</summary>
		private void InitIncidentEntityMappings()
		{
			this.AddElementMapping("IncidentEntity", @"SimpleModel", @"Core", "Incident", 4, 0);
			this.AddElementFieldMapping("IncidentEntity", "CollectionId", "CollectionId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("IncidentEntity", "Grouping", "Grouping", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("IncidentEntity", "Id", "Id", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("IncidentEntity", "ItemId", "ItemId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
		}

		/// <summary>Inits ItemEntity's mappings</summary>
		private void InitItemEntityMappings()
		{
			this.AddElementMapping("ItemEntity", @"SimpleModel", @"Core", "Item", 3, 0);
			this.AddElementFieldMapping("ItemEntity", "CollectionId", "CollectionId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ItemEntity", "Description", "Description", true, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ItemEntity", "Id", "Id", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 2);
		}

		/// <summary>Inits DomainItemEntity's mappings</summary>
		private void InitDomainItemEntityMappings()
		{
			this.AddElementMapping("DomainItemEntity", @"SimpleModel", @"Domain", "DomainItem", 2, 0);
			this.AddElementFieldMapping("DomainItemEntity", "Id", "Id", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("DomainItemEntity", "OldItemId", "OldItemId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits SpecificItemEntity's mappings</summary>
		private void InitSpecificItemEntityMappings()
		{
			this.AddElementMapping("SpecificItemEntity", @"SimpleModel", @"Specific", "SpecificItem", 2, 0);
			this.AddElementFieldMapping("SpecificItemEntity", "Id", "Id", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("SpecificItemEntity", "Note", "Note", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 1);
		}

	}
}
